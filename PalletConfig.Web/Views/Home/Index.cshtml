@using PalletConfig.Library;
@model PalletConfigViewModel

@{

    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="col-md-5">
        <form asp-action="Index" asp-controller="Home" id="inputForm">
            <div class="row form-border">
                <!-- Pallet parameters -->
                <div class="form-group">
                    <label>Input pallet size:</label>
                    <div class="row">
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.PalletSizeX" placeholder="Width (cm)" required />
                        </div>
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.PalletSizeY" placeholder="Height (cm)" required />
                        </div>
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.PalletSizeZ" placeholder="Depth (cm)" required />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row form-border">
                <!-- Box parameters -->
                <div class="form-group">
                    <label>Input box parameters:</label>
                    <div class="row">
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.BoxSizeX" placeholder="Width (cm)" required />
                        </div>
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.BoxSizeY" placeholder="Height (cm)" required />
                        </div>
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.BoxSizeZ" placeholder="Depth (cm)" required />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <label>Box weight:</label>
                        </div>
                        <div class="col-xs-4">
                            <input class="form-control" asp-for="PalletData.BoxWeight" placeholder="Mass (kg)" required />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row form-border">
                <!-- Stacking requirements -->
                <div class="form-group">
                    <label>Max height:</label>
                    <div class="row">
                        <div class="col-xs-6">
                            <input class="form-control" asp-for="PalletData.PalletHeight" placeholder="Pallet height (cm)" required />
                        </div>
                    </div>
                    <label>Max weight:</label>
                    <div class="row">
                        <div class="col-xs-6">
                            <input class="form-control" asp-for="PalletData.PalletWeight" placeholder="Pallet weight (kg)" required />
                        </div>
                    </div>
                    <p></p>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="checkbox-inline">
                                <input type="checkbox" asp-for="PalletData.StackOpposite" id="areLayersOpposite"> Stack layers on opposite side
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row form-border">
                <!-- Best option calculation -->
                <div class="form-group text-right">
                    <button type="submit" class="btn btn-primary mb-2" id="confirmBtnPost" value="Confirm">Confirm</button>
                    <button type="submit" class="btn btn-danger mb-2" id="resetBtn" formmethod="get">Reset</button>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-7">
        <div class="row form-border">
            <!-- Display graphical presentation of pallet-->
            <label>Pallet view:</label>
            <div>
                <div class="" id="canvas" width="400" height="300"></div>
            </div>
        </div>
        <div class="row form-border">
            <!-- Best option calculation -->
            <div class="form-group">
                <label for="chooseStackingOption">Select stacking option</label>
                <select multiple class="form-control" id="chooseStackingOption">
                    @try
                    {
                        @foreach (var option in Model.Configurations)
                        {
                            <option id="@option.OptionName">@option.OptionName: Boxes: @option.NumberOfBoxes, Total weight: @(option.TotalWeight)kg, Total height: @(option.TotalHeight)cm, Volume: @option.Volume.ToString("#0.00%")</option>
                        }
                    }
                    catch
                    {
                        <option>Nothing loaded yet...</option>
                    }
                </select>
            </div>
            <div class="form-group text-right">
                <button type="submit" class="btn btn-primary mb-2" id="confirmBtnGet" value="Confirm">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/js/three.min.js"></script>
    <script src="~/js/OrbitControls.js"></script>
    <script src="~/js/generateBoxes.js"></script>
    <script src="~/js/canvas.js"></script>
}